<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="utils_8cpp" kind="file" language="C++">
    <compoundname>utils.cpp</compoundname>
    <includes refid="utils_8h" local="yes">utils.h</includes>
    <incdepgraph>
      <node id="111">
        <label>/home/vedant/Programming/projects/components/esp-wifi-logger/utils.cpp</label>
        <link refid="utils_8cpp"/>
        <childnode refid="112" relation="include">
        </childnode>
      </node>
      <node id="112">
        <label>utils.h</label>
        <link refid="utils_8h"/>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="utils_8cpp_1af768902cbc75dc282b88515dd045b7b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* generate_log_message_timestamp</definition>
        <argsstring>(uint32_t timestamp, char *log_message)</argsstring>
        <name>generate_log_message_timestamp</name>
        <param>
          <type>uint32_t</type>
          <declname>timestamp</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>log_message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vedant/Programming/projects/components/esp-wifi-logger/utils.cpp" line="3" column="1" bodyfile="/home/vedant/Programming/projects/components/esp-wifi-logger/utils.cpp" bodystart="3" bodyend="11"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="utils_8h" kindref="compound">utils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="utils_8cpp_1af768902cbc75dc282b88515dd045b7b5" kindref="member">generate_log_message_timestamp</ref>(uint32_t<sp/>timestamp,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>log_message)</highlight></codeline>
<codeline lineno="4"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>log_string<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;(&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::string(std::to_string(timestamp))<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::string(log_message);</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*c_log_string<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)*(log_string.size()+1));</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(c_log_string,<sp/>log_string.c_str(),<sp/>log_string.size()+1);</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c_log_string;</highlight></codeline>
<codeline lineno="11"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/vedant/Programming/projects/components/esp-wifi-logger/utils.cpp"/>
  </compounddef>
</doxygen>
